// <auto-generated />
using Gfa;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace gfa.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20241203230228_2")]
    partial class _2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Gfa.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RatingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Gfa.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerDefense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerDribling")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerGoalkeeping")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerPace")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerPass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerPhysique")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerShot")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Gfa.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Gfa.TournamentTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TournamentTable");
                });

            modelBuilder.Entity("PersonTeam", b =>
                {
                    b.Property<int>("PeopleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PeopleId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("PersonTeam");
                });

            modelBuilder.Entity("Gfa.Person", b =>
                {
                    b.HasOne("Gfa.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("Gfa.TournamentTable", b =>
                {
                    b.HasOne("Gfa.Team", null)
                        .WithMany("TournamentTables")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("PersonTeam", b =>
                {
                    b.HasOne("Gfa.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gfa.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gfa.Team", b =>
                {
                    b.Navigation("TournamentTables");
                });
#pragma warning restore 612, 618
        }
    }
}
